AWSTemplateFormatVersion: 2010-09-09
Description: >-
  This template creates the Airflow supporting resources including an RDS
  instance to host the Airflow metadata database, an SQS queue to be used as
  broker backend, S3 buckets for logs and deployment packages, and then creates
  the Airflow scheduler, webserver and workers nested stacks. The nested Airflow
  services stacks create the Airflow instances in highly available auto scaling
  groups spanning two subnets, plus for the workers stack an EFS shared network
  directory and a custom cloudwatch load metric function to guide the auto
  scaling alarm triggers. **WARNING** This template creates AWS resources. You
  will be billed for the AWS resources used if you create a stack from this
  template. QS(0027)
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: VPC network configuration
        Parameters:
          - VPCID
          - PublicSubnet1ID
          - PublicSubnet2ID
          - PrivateSubnet1AID
          - PrivateSubnet2AID
          - AllowHTTPAccessCIDR
      - Label:
          default: Turbine Cluster configuration
        Parameters:
          - SchedulerInstanceType
          - WebserverInstanceType
          - WorkerInstanceType
          - MinGroupSize
          - MaxGroupSize
          - ShrinkThreshold
          - GrowthThreshold
      - Label:
          default: Apache Airflow configuration
        Parameters:
          - LoadExampleDags
          - LoadDefaultCons
          - WebServerPort
      - Label:
          default: AWS Quick Start configuration
        Parameters:
          - QSS3BucketName
          - QSS3KeyPrefix
    ParameterLabels:
      VPCID:
        default: VPC ID
      PublicSubnet1ID:
        default: Public subnet 1 ID
      PublicSubnet2ID:
        default: Public subnet 2 ID
      PrivateSubnet1AID:
        default: Private subnet 1 ID
      PrivateSubnet2AID:
        default: Private subnet 2 ID
      AllowHTTPAccessCIDR:
        default: Allowed HTTP access CIDR
      SchedulerInstanceType:
        default: Scheduler instance type
      WebserverInstanceType:
        default: Web server instance type
      WorkerInstanceType:
        default: Workers instance type
      MinGroupSize:
        default: Minimum group size
      MaxGroupSize:
        default: Maximum group size
      ShrinkThreshold:
        default: Shrink threshold
      GrowthThreshold:
        default: Growth threshold
      LoadExampleDags:
        default: Load example DAGs
      LoadDefaultCons:
        default: Load default connections
      WebServerPort:
        default: Web server port
      QSS3BucketName:
        default: Quick Start S3 bucket name
      QSS3KeyPrefix:
        default: Quick Start S3 key prefix
Parameters:

  VPCID:
    Description: An existing VPC for the cluster.
    Type: AWS::EC2::VPC::Id
  PublicSubnet1ID:
    Description: An existing public Subnet in some Availability Zone.
    Type: AWS::EC2::Subnet::Id
  PublicSubnet2ID:
    Description: An existing public Subnet in another Availability Zone.
    Type: AWS::EC2::Subnet::Id
  PrivateSubnet1AID:
    Description: An existing private Subnet in some Availability Zone.
    Type: AWS::EC2::Subnet::Id
  PrivateSubnet2AID:
    Description: An existing private Subnet in another Availability Zone.
    Type: AWS::EC2::Subnet::Id
  AllowHTTPAccessCIDR:
    Description: >-
      The IPv4 CIDR block to allow HTTP access in the webserver. Using the same
      CIDR for the VPC is a secure default. Using 0.0.0.0/0 allows access from
      everywhere, which is convenient but less secure.
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28.
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Default: 10.0.0.0/16
    Type: String

  SchedulerInstanceType:
    Description: EC2 instance type to use for the scheduler.
    Default: t3.micro
    Type: String
  WebserverInstanceType:
    Description: EC2 instance type to use for the webserver.
    Default: t3.micro
    Type: String
  WorkerInstanceType:
    Description: EC2 instance type to use for the workers.
    Default: t3.medium
    Type: String
  MinGroupSize:
    Description: The minimum number of active worker instances.
    Default: 0
    Type: Number
  MaxGroupSize:
    Description: The maximum number of active worker instances.
    Default: 10
    Type: Number
  ShrinkThreshold:
    Description: >-
      The threshold for the average queue size from which going equal or below
      will trigger the AutoScaling group to Scale In, deallocating one worker
      instance.
    Default: 0.5
    Type: Number
  GrowthThreshold:
    Description: >-
      The threshold for the average queue size from which going equal or above
      will trigger the AutoScaling group to Scale Out, allocating one worker
      instance.
    Default: 0.9
    Type: Number

  LoadExampleDags:
    Description: >-
      Load the example DAGs distributed with Airflow. Useful if deploying a
      stack for demonstrating a few topologies, operators and scheduling
      strategies.
    AllowedValues:
      - 'False'
      - 'True'
    Default: 'False'
    Type: String
  LoadDefaultCons:
    Description: >-
      Load the default connections initialized by Airflow. Most consider these
      unnecessary, which is why the default is to not load them.
    AllowedValues:
      - 'False'
      - 'True'
    Default: 'False'
    Type: String
  WebServerPort:
    Description: >-
      The port Airflow webserver will be listening.
    ConstraintDescription: >-
      Please use a port in the allowed range
    MinValue: 0
    MaxValue: 65535
    Default: 8080
    Type: Number

  QSS3BucketName:
    Description: >-
      S3 bucket name for the Quick Start assets. You can specify your own bucket
      providing assets and submodules, if you want to override the Quick Start
      behavior for your specific implementation.
    ConstraintDescription: >-
      Quick Start bucket name can include numbers, lowercase letters, uppercase
      letters, and hyphens (-). It cannot start or end with a hyphen (-).
    AllowedPattern: '^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$'
    Default: turbine-quickstart
    Type: String
  QSS3KeyPrefix:
    Description: >-
      S3 key prefix for the Quick Start assets. You can scpeficy your own
      "directory" providing the stack templates, if you want to override the
      Quick Start behavior for your specific implementation.
    ConstraintDescription: >-
      Quick Start key prefix can include numbers, lowercase letters, uppercase
      letters, hyphens (-), and forward slash (/).
    AllowedPattern: '^[0-9a-zA-Z-/]*$'
    Default: quickstart-turbine-airflow/
    Type: String

  SchedulerAsWorker:
    Description: Whether to use Scheduler as a smaller worker with its own queue
    AllowedValues:
      - 'False'
      - 'True'
    Type:
      'String'

Conditions:
  SchedulerAsWorkerCondition:
    !Equals [!Ref SchedulerAsWorker, 'True']

Resources:

  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: >
        Associates the Database Instances with the selected VPC Subnets.
      SubnetIds:
        - !Ref PrivateSubnet1AID
        - !Ref PrivateSubnet2AID

  DBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: '20'
      DBInstanceClass: db.t2.micro
      DBName: airflow
      Engine: postgres
      MasterUsername: !Join
        - ''
        - - '{{resolve:secretsmanager:'
          - !Ref Secret
          - ':SecretString:username}}'
      MasterUserPassword: !Join
        - ''
        - - '{{resolve:secretsmanager:'
          - !Ref Secret
          - ':SecretString:password}}'
      DBSubnetGroupName: !Ref DBSubnetGroup
      VPCSecurityGroups:
        - !Ref SecurityGroup

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Rules with permissions for database connections for Airflow.
      SecurityGroupIngress:
        - SourceSecurityGroupId: !Ref InstancesSecurityGroup
          IpProtocol: TCP
          FromPort: 5432
          ToPort: 5432
      VpcId: !Ref VPCID

  Secret:
    Type: AWS::SecretsManager::Secret
    Properties:
      GenerateSecretString:
        SecretStringTemplate: '{"username": "airflow"}'
        GenerateStringKey: "password"
        PasswordLength: 16
        ExcludePunctuation: True

  SecretTargetAttachment:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId: !Ref Secret
      TargetId: !Ref DBInstance
      TargetType: AWS::RDS::DBInstance

  TaskQueue:
    Type: AWS::SQS::Queue

  SmallTaskQueue:
    Type: AWS::SQS::Queue
    Condition: SchedulerAsWorkerCondition

  LogsBucket:
    Type: AWS::S3::Bucket

  DeploymentsBucket:
    Type: AWS::S3::Bucket

  InstancesSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: >-
        The security group shared by all Airflow instances used as inbound rule
        for the other more specific resource security groups.
      VpcId: !Ref VPCID
      Tags:
        - Key: Name
          Value: airflow-instances-sg

  SchedulerStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join
        - ''
        - - !Sub https://${QSS3BucketName}.s3.amazonaws.com/
          - !Ref QSS3KeyPrefix
          - templates/turbine-scheduler.template
      Parameters:
        PrivateSubnet1AID: !Ref PrivateSubnet1AID
        PrivateSubnet2AID: !Ref PrivateSubnet2AID
        SecurityGroupID: !Ref InstancesSecurityGroup
        DatabaseSecret: !Ref Secret
        QueueName: !GetAtt TaskQueue.QueueName
        SmallQueueName: !If [SchedulerAsWorkerCondition, !GetAtt SmallTaskQueue.QueueName, '']
        LogsBucket: !Ref LogsBucket
        InstanceType: !Ref SchedulerInstanceType
        LoadExampleDags: !Ref LoadExampleDags
        LoadDefaultCons: !Ref LoadDefaultCons
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
    DependsOn:
      - SecretTargetAttachment

  WebserverStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join
        - ''
        - - !Sub https://${QSS3BucketName}.s3.amazonaws.com/
          - !Ref QSS3KeyPrefix
          - templates/turbine-webserver.template
      Parameters:
        VPCID: !Ref VPCID
        PublicSubnet1ID: !Ref PublicSubnet1ID
        PublicSubnet2ID: !Ref PublicSubnet2ID
        SecurityGroupID: !Ref InstancesSecurityGroup
        AllowHTTPAccessCIDR: !Ref AllowHTTPAccessCIDR
        DatabaseSecret: !Ref Secret
        QueueName: !GetAtt TaskQueue.QueueName
        SmallQueueName: !If [SchedulerAsWorkerCondition, !GetAtt SmallTaskQueue.QueueName, '']
        LogsBucket: !Ref LogsBucket
        InstanceType: !Ref WebserverInstanceType
        LoadExampleDags: !Ref LoadExampleDags
        LoadDefaultCons: !Ref LoadDefaultCons
        WebServerPort: !Ref WebServerPort
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
    DependsOn:
      - SecretTargetAttachment

  WorkerSetStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join
        - ''
        - - !Sub https://${QSS3BucketName}.s3.amazonaws.com/
          - !Ref QSS3KeyPrefix
          - templates/turbine-workerset.template
      Parameters:
        VPCID: !Ref VPCID
        PrivateSubnet1AID: !Ref PrivateSubnet1AID
        PrivateSubnet2AID: !Ref PrivateSubnet2AID
        SecurityGroupID: !Ref InstancesSecurityGroup
        DatabaseSecret: !Ref Secret
        QueueName: !GetAtt TaskQueue.QueueName
        SmallQueueName: !If [SchedulerAsWorkerCondition, !GetAtt SmallTaskQueue.QueueName, '']
        LogsBucket: !Ref LogsBucket
        InstanceType: !Ref WorkerInstanceType
        MinGroupSize: !Ref MinGroupSize
        MaxGroupSize: !Ref MaxGroupSize
        ShrinkThreshold: !Ref ShrinkThreshold
        GrowthThreshold: !Ref GrowthThreshold
        LoadExampleDags: !Ref LoadExampleDags
        LoadDefaultCons: !Ref LoadDefaultCons
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
    DependsOn:
      - SecretTargetAttachment

  CodeDeployApplication:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: !Ref AWS::StackName
      ComputePlatform: Server

  CodeDeployDeploymentGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties:
      ApplicationName: !Ref CodeDeployApplication
      DeploymentGroupName: !Ref AWS::StackName
      AutoScalingGroups:
        - !GetAtt SchedulerStack.Outputs.AutoScalingGroup
        - !GetAtt WebserverStack.Outputs.AutoScalingGroup
        - !GetAtt WorkerSetStack.Outputs.AutoScalingGroup
      ServiceRoleArn: !GetAtt CodeDeployServiceRole.Arn

  CodeDeployServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codedeploy.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole

Outputs:
  DeploymentsBucket:
    Value: !Ref DeploymentsBucket
  CodeDeployApplication:
    Value: !Ref CodeDeployApplication
  CodeDeployDeploymentGroup:
    Value: !Ref CodeDeployDeploymentGroup
